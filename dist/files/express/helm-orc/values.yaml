# Default values for orchestrator.

nameOverride: "orchestrator"

fullnameOverride: ""

# Set the default, but will be replaced by contents of values.circleci.yaml
valuesYaml: values.yaml

image:
  repository: NOTE-THIS-WILL-BE-POPULATED-BY-CIRCLECI
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

service:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080

localDeployment: false

livenessProbeSettings: null

readinessProbeSettings:
  httpGet:
    path: /baas/orchestrator/health-check
    port: 8080
  initialDelaySeconds: 3
  periodSeconds: 8

initContainerCommand: nil

commitHash: 0000000

awsParameterPrefix: baas

appsettings:
  name: appsettings
  filename: .env
  mountPath: /app/

# -------------------------------------
# Application's .env file
# -------------------------------------
appsettingsUseNameValues: true
appsettingsValues: |
  PORT=8080
  ENV=prod
  API_BASE=localhost:80
  APP_URL_BASE=/baas/orchestrator

# External Secrets are used to return a secret from parameter store (and eventually CyberArk)
# The external secret will create a secret, which will then be exposed as an environment variable in the container
# externalSecrets:
#   DATABASE_URL: mongoDatabaseUrl
externalSecrets: null

# Broken out as env variable, to allow as an .env setting override on a per lane basis
envVariables:
  SUBMIT_APPLICATION_API_URL: https://slc-rcpwebcor.stormwind.local/Progressive.B2BAPI.Orchestrator/api/vi/application

ingress:
  enabled: false
  servicePort: 80
  annotations:
    {
      kubernetes.io/ingress.class: alb,
      alb.ingress.kubernetes.io/scheme: internet-facing,
      alb.ingress.kubernetes.io/group.name: nonprod-alb,
      alb.ingress.kubernetes.io/healthcheck-path: /baas/orchestrator/health-check,
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]',
      alb.ingress.kubernetes.io/load-balancer-attributes: deletion_protection.enabled=true,
    }
  hosts:
    - host: dev-testing.api.prog-research.com
      paths:
        - path: "/baas/orchestrator/*"
        - path: "/baas/orchestrator"
  tls: []

certificateFiles:
  - name: stormwind-ca
    # This is where the file is stored in the AWS parameters store
    parameterStoreFile: /certificateFiles/STORMWIND-PFPRDD1CA01-CA.pem
    mountPath: /etc/ssl/certs/
    mountFilename: stormwind.local.pem
    # This file is used for laptop deployments. Put the pem file in the same directory as the helm chart.yaml file.
    # It's not used for CI/CD in the cloud deployments
    localCertificateFile: stormwind.local.pem

# =========================================================================================================

replicaCount: 1

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext: {}
#   capabilities:
#     drop:
#     - ALL
#   readOnlyRootFilesystem: true
#   runAsNonRoot: true
#   runAsUser: 1000

# ingress:
#   enabled: false
#   annotations:
#     {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths: []
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Cause deployments to remove old replica sets - default is 10 if commented out. Use "0" for Zero value
revisionHistoryLimit: "0"

